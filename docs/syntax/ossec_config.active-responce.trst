.. xml:element:: command 

    In the commands configuration you create new “commands” to be used as responses. 
    You can have as many commands as you want. Each one should be inside their own 
    “command” element. 

.. xml:element:: command.name 

    Used to link the command to the response. 

.. xml:element:: command.executable 

    It must be a file (with exec permissions) inside “/var/ossec/active-response/bin”.

    You don’t need to provide the whole path.

.. xml:element:: command.expect

    The arguments this command is expecting (options are srcip and username). 

.. xml:element:: command.timeout_allowed 

    Specifies if this command supports timeout

.. xml:element:: active-response 

    In the active-response configuration, you bind the commands (created) to events. 
    You can have as many responses as you want. Each one should be inside their own 
    “active-response” element.

.. xml:element:: active-response.disabled 

    Disables active response if set to yes.

.. xml:element:: active-response.command 

    Used to link the response to the command 

.. xml:element:: active-responce.location 

    Where the command should be executed. You have four options: 

    **Allowed:** 

    - *local*: on the agent that generated the event
    - *server*: on the OSSEC server 
    - *defined-agent*: on a specific agent (when using this option, you need to set the 
      agent_id to use)
    - *all*: or everywhere.

.. xml:element:: active-response.agent_id 

    The ID of the agent to execute the response (when defined-agent is set). 

.. xml:element:: active-response.level 
    
    The response will be executed on any event with this level or higher. 

.. xml:elemnet:: active-response.timeout 

    How long until the reverse command is executed (IP unblocked, for example). 



